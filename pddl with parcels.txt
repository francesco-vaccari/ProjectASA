(define (domain deliveroo)
    (:requirements :strips)
    (:predicates
        (inParcel ?parcel ?cell_x_y) (inAgent ?agent ?cell_x_y)
        (has ?agent ?parcel)
        (wall ?cell_x_y) (deliverable ?cell_x_y) (normal ?cell_x_y)
        (near ?cellA_x-y ?cellB_x-y)
    )
    
    (:action move
        :parameters (?agent ?cellFrom_x_y ?cellTo_x_y)
        :precondition (and (inAgent ?agent ?cellFrom_x_y) (not (wall ?cellTo_x_y)) (near ?cellFrom_x_y ?cellTo_x_y))
        :effect (and (inAgent ?agent ?cellTo_x_y) (not (inAgent ?agent ?cellFrom_x_y)) (not (wall ?cellFrom_x_y)) (wall ?cellTo_x_y))
    )

    (:action pickup
        :parameters (?agent ?parcel ?cell_x_y)
        :precondition (and (inAgent ?agent ?cell_x_y) (inParcel ?parcel ?cell_x_y))
        :effect (and (has ?agent ?parcel) (not (inParcel ?parcel ?cell_x_y)))
    )

    (:action putdown
        :parameters (?agent ?parcel ?cell_x_y)
        :precondition (and (has ?agent ?parcel) (inAgent ?agent ?cell_x_y) (deliverable ?cell_x_y)) 
        :effect (and (not (has ?agent ?parcel)) (inParcel ?parcel ?cell_x_y))
    )
)





(define (problem BFS)
    (:domain deliveroo)
    (:objects agent parcel cell_0_0 cell_0_1 cell_1_0 cell_1_1)
    (:init 
        (normal cell_0_0) (normal cell_0_1) (normal cell_1_0) (deliverable cell_1_1)
        (near cell_0_0 cell_0_1) (near cell_0_0 cell_1_0) (near cell_0_1 cell_1_1) (near cell_1_0 cell_1_1)
        (inAgent agent cell_0_0) (wall cell_0_0)
        (inParcel parcel cell_0_1))
    (:goal (inParcel parcel cell_1_1))
)