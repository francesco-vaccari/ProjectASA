Domain:
(define (domain deliveroo)
    (:requirements :strips)
    (:predicates
        (cell ?x_y)
        (near ?x_y ?x_y)
        (in ?x_y)
    )
    
    (:action move
        :parameters (?from_x_y ?to_x_y)
        :precondition (and (in ?from_x_y) (cell ?to_x_y) (near ?from_x_y ?to_x_y))
        :effect (and (in ?to_x_y) (not (in ?from_x_y)))
    )
)

Map: [0 wall, 1 free cell, 4 agent]
[
  0 ->
  | [1, 1, 1, 1],
  v [0, 4, 1, 0],
    [1, 1, 1, 1],
    [1, 0, 0, 0]
]

Problem:
(define (problem BFS)
    (:domain deliveroo)
    (:objects c_0_0 c_0_1 c_0_2 c_0_3 c_1_1 c_1_2 c_2_0 c_2_1 c_2_2 c_2_3 c_3_0)
    (:init 
        (cell c_0_0) (cell c_0_1) (cell c_0_2) (cell c_0_3)
        (not (cell c_1_1)) (cell c_1_2)
        (cell c_2_0) (cell c_2_1) (cell c_2_2) (cell c_2_3)
        (cell c_3_0)
        (near c_0_0 c_0_1)
        (near c_0_1 c_0_0) (near c_0_1 c_1_1) (near c_0_1 c_0_2)
        (near c_0_2 c_0_1) (near c_0_2 c_1_2) (near c_0_2 c_0_3)
        (near c_0_3 c_0_2)
        (near c_1_1 c_0_1) (near c_1_1 c_2_1) (near c_1_1 c_1_2)
        (near c_1_2 c_0_2) (near c_1_2 c_1_1) (near c_1_2 c_2_2)
        (near c_2_0 c_3_0) (near c_2_0 c_2_1)
        (near c_2_1 c_1_1) (near c_2_1 c_2_0) (near c_2_1 c_2_2)
        (near c_2_2 c_1_2) (near c_2_2 c_2_1) (near c_2_2 c_2_3)
        (near c_2_3 c_2_2)
        (near c_3_0 c_2_0)
        (in c_0_3))
    (:goal (in c_3_0))
)

Plan
(move c_0_3 c_0_2) -> down
(move c_0_2 c_1_2) -> right
(move c_1_2 c_2_2) -> right
(move c_2_2 c_2_1) -> down
(move c_2_1 c_2_0) -> down
(move c_2_0 c_3_0) -> right